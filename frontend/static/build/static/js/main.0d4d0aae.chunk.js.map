{"version":3,"sources":["components/signup.js","components/Home.js","components/login.js","components/profile.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","SignUp","props","state","username","email","password1","password2","handleSubmit","bind","handleChange","e","preventDefault","post","this","then","res","console","log","data","localStorage","setItem","JSON","stringify","history","push","catch","error","setState","target","name","value","className","onSubmit","htmlFor","id","type","onChange","placeholder","required","password","Component","Home","clear","appUser","parse","getItem","to","onClick","logOutUser","href","role","Login","Profile","document","getElementById","getProfile","styles","handleNameChange","handlePasswordChange","updateProfile","Boolean","window","location","hostname","match","ReactDOM","render","path","component","isAuthed","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d4d0aae.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass SignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/login/', this.state)\n    .then(res => {\n        console.log('res', res.data)\n        localStorage.setItem('my-app-user', JSON.stringify(res.data)\n      );\n        this.props.history.push('/')\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n\n  return (\n  <div className=\"container mt-5\">\n    <h1>Sign Up</h1>\n\n    <div className='row'>\n        <div className='col-sm-8'>\n          <div className='card'>\n            <div className='card-body'>\n\n              <form onSubmit={this.handleSubmit}>\n                <p>\n                  <label htmlFor=\"username\">Username</label>\n                  <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"email\">Email</label>\n                  <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"password\">Password1</label>\n                  <input id='password1' type='text' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"password\">Password2</label>\n                  <input id='password2' type='text' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required=\"required\"/>\n                </p>\n                <button>Login</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default SignUp;\n","import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Home extends Component {\n\n  logOutUser(e){\n    localStorage.clear();\n  }\n\n\nrender () {\n  let appUser = JSON.parse(localStorage.getItem('my-app-user'));\n    return (\n  <div>\n    <div>\n        <div className=\"base-nav\">\n            <ul className=\"nav-bar\">\n                <NavLink className=\"nav-link\" to=\"/home\">Home Page</NavLink>\n                <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\n                <NavLink className=\"nav-link\" to=\"/profile\">{appUser.username}</NavLink>\n                <NavLink className=\"nav-link\" to=\"/home\" onClick={this.logOutUser}>Logout</NavLink>\n\n\n            </ul>\n        </div>\n    </div>\n\n    <div className='jumbotron centered'>\n      <div className='container'>\n        <i className='fas fa-key fa-6x'></i>\n        <h1 className='display-3'>1on1s</h1>\n        <p className='lead'>Train with The Upstates finest!</p>\n        <hr/>\n        <a className='btn btn-light btn-lg' href='/signup' role='button'>Sign Up</a>\n        <a className='btn btn-dark btn-lg' href='/login' role='button'>Login</a>\n      </div>\n    </div>\n  </div>\n  )\n}\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/login/', this.state)\n    .then(res => {\n        console.log('res', res.data)\n        localStorage.setItem('my-app-user', JSON.stringify(res.data)\n      );\n        this.props.history.push('/')\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n\n  return (\n  <div className=\"container mt-5\">\n    <h1>Login</h1>\n\n    <div className='row'>\n        <div className='col-sm-8'>\n          <div className='card'>\n            <div className='card-body'>\n\n              <form onSubmit={this.handleSubmit}>\n                <p>\n                  <label htmlFor=\"username\">Username</label>\n                  <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"email\">Email</label>\n                  <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"password\">Password</label>\n                  <input id='password' type='password' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required=\"required\"/>\n                </p>\n                <button>Login</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default Login;\n","import React, {Component} from 'react';\n// import axios from \"axios\";\n\nclass Profile extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        name:'',\n        email:'',\n        password:'',\n        id:''\n      };\n\n    }\n    componentDidMount(){\n      document.getElementById('addHyperLink').className = \"\";\n      document.getElementById('homeHyperlink').className = \"\";\n      document.getElementById('profileHyperlink').className = \"active\";\n      this.getProfile();\n    }\n    updateProfile(){\n\n    }\n\n    getProfile(){\n\n    }\n\n    render() {\n      return (\n        <div className=\"col-md-5\">\n          <div className=\"form-area\">\n              <form>\n                <br styles=\"clear:both\" />\n                <div className=\"form-group\">\n                  <input value={this.state.name} type=\"text\" onChange={this.handleNameChange} className=\"form-control\" placeholder=\"Name\" required />\n                </div>\n                <div className=\"form-group\">\n                  <input value={this.state.password} type=\"password\" onChange={this.handlePasswordChange} className=\"form-control\" placeholder=\"Password\" required />\n                </div>\n\n                <button type=\"button\" onClick={this.updateProfile} id=\"submit\" name=\"submit\" className=\"btn btn-primary pull-right\">Update</button>\n              </form>\n          </div>\n        </div>\n      )\n    }\n}\n\nexport default Profile;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport SignUp from './components/signup';\nimport Home from './components/Home';\nimport Login from './components/login';\nimport Profile from './components/profile';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { BrowserRouter as Router, Route, Switch , } from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter>\n      <Router>\n          <Switch>\n            <Route path='/profile/' component={Profile} />\n            <Route path='/signup/' component={SignUp} />\n            <Route path='/login/' component={Login} />\n            <Route path='/home/' render={(props) => <Home {...props} isAuthed={true} />}\n />\n        </Switch>\n      </Router>\n  // </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}