{"version":3,"sources":["components/Signup.js","components/Home.js","components/Login.js","components/ProfileForm.js","components/SearchLessons.js","components/UserUpdate.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","Signup","props","state","username","email","password1","password2","handleSubmit","bind","handleChange","e","preventDefault","post","this","then","res","console","log","data","localStorage","setItem","JSON","stringify","history","push","catch","error","setState","target","name","value","className","onSubmit","htmlFor","id","type","onChange","placeholder","required","password","Component","Home","clear","appUser","parse","getItem","to","onClick","logOutUser","href","role","Login","ProfileForm","avatar","first_name","last_name","preview","location","bats","graduation_date","throws","weight","school","position","is_professional","draft_round","draft_pick","stat_link","isEditing","isDeleteting","toggleEdit","deleteProfile","handleImageChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","bio","headers","token","styles","src","alt","SearchLesson","query","filteredData","handleInputChange","event","prevState","filter","element","toLowerCase","includes","getData","response","json","map","i","UserUpdate","userId","myuserId","get","patch","Boolean","window","hostname","match","ReactDOM","render","path","component","ProfileDetail","isAuthed","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.503b954c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Signup extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/registration/', this.state)\n    .then(res => {\n        console.log('res', res.data)\n        localStorage.setItem('my-app-user', JSON.stringify(res.data)\n      );\n        this.props.history.push('/')\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n    console.log({[e.target.name]: e.target.value})\n  }\n\n  render() {\n\n  return (\n  <div className=\"container mt-5\">\n    <h1>Sign Up</h1>\n\n    <div className='row'>\n        <div className='col-sm-8'>\n          <div className='card'>\n            <div className='card-body'>\n\n              <form onSubmit={this.handleSubmit}>\n                <p>\n                  <label htmlFor=\"username\">Username</label>\n                  <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"email\">Email</label>\n                  <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"password\">Password1</label>\n                  <input id='password1' type='password' name='password1' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"password\">Password2</label>\n                  <input id='password2' type='password' name='password2' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required=\"required\"/>\n                </p>\n                <button>Sign Up</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default Signup;\n","import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Home extends Component {\n\n  logOutUser(e){\n    localStorage.clear();\n    this.history.push('/home')\n\n  }\n\n\nrender () {\n  let appUser = JSON.parse(localStorage.getItem('my-app-user'));\n  console.log('here', appUser);\n    return (\n  <div>\n    <div>\n        <div className=\"base-nav\">\n            <ul className=\"nav-bar\">\n              <h3>Welcome {appUser ? appUser.username : null}</h3>\n                <NavLink className=\"nav-link\" to=\"/home/\"><button>Home Page</button></NavLink>\n                <NavLink className=\"nav-link\" to=\"/search/\"><button>Search</button></NavLink>\n                <NavLink className=\"nav-link\" to=\"/profile/new/\"><button>Create Profile</button></NavLink>\n                <NavLink className=\"nav-link\" to=\"/user/\"><button>Update user</button></NavLink>\n                <NavLink className=\"nav-link\" to=\"/login/\"><button>Login</button></NavLink>\n                <NavLink className=\"nav-link\" to=\"/signup/\"><button>Sign Up</button></NavLink>\n                <NavLink className=\"nav-link\" to=\"/logout\" onClick={this.logOutUser}><button>Logout</button></NavLink>\n            </ul>\n        </div>\n    </div>\n\n    <div className='jumbotron centered'>\n      <div className='container'>\n        <i className='fas fa-key fa-6x'></i>\n        <h1 className='display-3'>1on1s</h1>\n        <p className='lead'>Train with The Upstates finest!</p>\n        <hr/>\n        <a className='btn btn-light btn-lg' href='/signup' role='button'>Sign Up</a>\n        <a className='btn btn-dark btn-lg' href='/login' role='button'>Login</a>\n      </div>\n    </div>\n  </div>\n  )\n}\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/login/', this.state)\n    .then(res => {\n        console.log('res', res.data)\n        localStorage.setItem('my-app-user', JSON.stringify(res.data)\n      );\n        this.props.history.push('/home')\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n\n  return (\n\n  <div className = \"container mt-5\" >\n    <h1>Login</h1>\n      <div className='row'>\n        <div className='col-sm-8'>\n          <div className='card'>\n            <div className='card-body'>\n\n              <form onSubmit={this.handleSubmit}>\n                <p>\n                  <label htmlFor=\"username\">Username</label>\n                  <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"email\">Email</label>\n                  <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"password\">Password</label>\n                  <input id='password' type='password' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required=\"required\"/>\n                </p>\n                <button>Login</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>)\n    }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass ProfileForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        // user: '', //new\n        avatar: null,\n        first_name:'',\n        last_name:'',\n        preview: '',\n        location: '',\n        bats: '',\n        graduation_date:'',\n        throws: '',\n        weight: '',\n        school: '',\n        position: '',\n        is_professional: '',\n        draft_round: '',\n        draft_pick: '',\n        stat_link: '',\n        isEditing: false,\n        isDeleteting: false,\n      };\n\n      this.toggleEdit = this.toggleEdit.bind(this);\n      // this.saveProfile = this.saveProfile.bind(this);\n      this.deleteProfile = this.deleteProfile.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleImageChange = this.handleImageChange.bind(this);\n    }\n\n    toggleEdit() {\n      this.setState(state => ({\n        isEditing: !state.isEditing\n      }));\n    }\n    //\n    // saveProfile() {\n    //   console.log('here i am')\n    //   // you need to add all the fields that are saved to state to a FormData object\n    //   // pass the FormData object to the server\n    //\n    //   let formData = new FormData();\n    //\n    //   axios.post('/api/v1/profile/', formData)\n    //   .then(res => {\n    //     console.log(res)\n    //   })\n    //   .catch(error => {\n    //     console.log(error)\n    //   });\n    // }\n\n    deleteProfile() {\n      this.setState(state => ({\n        isDeleteting: !state.isDeleteting\n      }));\n    }\n\n\n    handleChange(e) {\n      this.setState({[e.target.name]: e.target.value});\n      console.log({[e.target.name]: e.target.value})\n    }\n\n    handleImageChange(e) {\n      // The selected files' are returned by the element's HTMLInputElement.files property — this returns a FileList object, which contains a list of File objects\n      let file = e.target.files[0];\n      // we'll use this value when we save the image (see _saveImage)\n      this.setState({avatar: file});\n      // The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.\n      let reader = new FileReader();\n      // A handler for the loadend event. This event is triggered each time the reading operation is completed (either in success or failure).\n      reader.onloadend = () => {\n        this.setState({preview: reader.result});\n      }\n      // Starts reading the contents of the specified Blob, once finished, the result attribute contains a data: URL representing the file's data.\n      reader.readAsDataURL(file);\n    }\n\n    handleSubmit(e) {\n      e.preventDefault();\n\n      let formData = new FormData()\n\n      // formData.append('users', this.state.users)\n      formData.append('is_professional', this.state.is_professional);\n      formData.append('draft_round', this.state.draft_round);\n      formData.append('draft_pick', this.state.draft_pick);\n      formData.append('stat_link', this.state.stat_link);\n      formData.append('location', this.state.location);\n      formData.append('graduation_date', this.state.graduation_date);\n      formData.append('bats', this.state.bats);\n      formData.append('throws', this.state.throws);\n      formData.append('weight', this.state.weight);\n      formData.append('school', this.state.school);\n      formData.append('position', this.state.position);\n      // formData.append('first name', this.state.first_name);\n      // formData.append('last name', this.state.last_name);\n      formData.append('avatar', this.state.avatar);\n      formData.append('bio', this.state.bio);\n\n      axios.post('/api/v1/profile/', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          'Authoriztion': `Token ${JSON.parse(localStorage.getItem('my-app-user')).token}`\n        }\n      })\n      .then(res => {\n          console.log('returned data:', res);\n          console.log(res.data);\n          localStorage.setItem('my-app-user', JSON.stringify(res.data)\n        );\n          this.props.history.push('/home')\n          // let user  = [...this.state.user];\n          // user.push(res.data);\n          // this.setState({user});\n      })\n      .catch(error => {\n          console.log(error);\n      });\n  }\n\n  render() {\n  return (\n<div className = \"col-md-5\" >\n  <div className=\"form-area\">\n  <form onSubmit={this.handleSubmit}>\n    <br styles=\"clear:both\"/>\n    <div className=\"form-group\">\n      <label htmlFor='avatar'>Profile Picture:</label>\n      <input name='avatar' type=\"file\" onChange={this.handleImageChange} className=\"form-control\" placeholder=\"Image\"/> {\n        this.state.avatar\n          ? (<img src={this.state.preview} alt='preview'/>)\n          : (null)\n      }\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='is_professional'>Professional Athlete</label>\n      <select name='Professional' value={this.state.is_professional} onChange={this.handleChange} className=\"form-control\" placeholder=\"professional\">\n        <option value='null'>Select an Option</option>\n        <option value='true'>Professional Athlete</option>\n        <option value='false'>Student Athlete</option>\n      </select>\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='first_name'>First name:</label>\n      <input name='first_name' value={this.state.first_name} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"First Name\"/>\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='last_name'>Last name:</label>\n      <input name='last_name' value={this.state.last_name} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Last Name\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='location'>Location:</label>\n      <input name='location' value={this.state.location} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"location\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='bats'>Bats:</label>\n      <input name='bats' value={this.state.bats} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Bats\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='throws'>Throws:</label>\n      <input name='throws' value={this.state.throws} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Throws\"/>\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='weight'>Weight:</label>\n      <input name='weight' value={this.state.weight} type=\"number\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Weight\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='graduation_date'>Graduation Year:</label>\n      <input name='graduation_date' value={this.state.graduation_date} type=\"number\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Year\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='school'>School:</label>\n      <input name='school' value={this.state.school} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"School\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='position'>Position:</label>\n      <input name='position' value={this.state.position} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Position\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='bio'>draft_round:</label>\n      <input name='bio' value={this.state.draft_round} type=\"number\" onChange={this.handleChange} className=\"form-control\" placeholder=\"draft_round\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='bio'>draft_pick:</label>\n      <input name='draft_pick' value={this.state.draft_pick} type=\"number\" onChange={this.handleChange} className=\"form-control\" placeholder=\"draft_pick\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='bio'>stat link:</label>\n      <input name='stat_link' value={this.state.stat_link} type=\"url\" onChange={this.handleChange} className=\"form-control\" placeholder=\"stat_link\" />\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor='bio'>Bio:</label>\n      <input name='bio' value={this.state.bio} type=\"text\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Bio\" />\n    </div>\n    <button className=\"btn btn-primary pull-right\" type='submit'>Save</button>\n  </form>\n</div>\n</div>)\n}\n}\n\nexport default ProfileForm;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass SearchLesson extends Component {\n  state = {\n    query: \"\",\n    data: [],\n    filteredData: []\n  };\n\n  handleInputChange = event => {\n    const query = event.target.value;\n\n    this.setState(prevState => {\n      const filteredData = prevState.data.filter(element => {\n        return element.name.toLowerCase().includes(query.toLowerCase());\n      });\n\n      return {\n        query,\n        filteredData\n      };\n    });\n  };\n\n  getData = () => {\n    axios.post('/api/v1/profile/', {\n      headers: {\n        'content-type': 'multipart/form-data',\n        'Authoriztion': `Token ${JSON.parse(localStorage.getItem('my-app-user')).token}`\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        const { query } = this.state;\n        const filteredData = data.filter(element => {\n          return element.name.toLowerCase().includes(query.toLowerCase());\n        });\n\n        this.setState({\n          data,\n          filteredData\n        });\n      });\n  };\n\n  componentWillMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <div className=\"searchForm ui segment\">\n        <form className='ui form'>\n          <div className='field'>\n          <label>Search Lessons:</label>\n          <input\n            placeholder=\"Search for...\"\n            value={this.state.query}\n            onChange={this.handleInputChange}\n          />\n          </div>\n        </form>\n        <div>{this.state.filteredData.map(i => <p>{i.name}</p>)}</div>\n      </div>\n    );\n  }\n}\nexport default SearchLesson;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass UserUpdate extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      userId:localStorage.getItem('user_id')\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\ncomponentDidMount() {\n  let myuserId = localStorage.getItem('user_id')\n  // ****WHY IS USER ID NULLLLLL!!!!!!!******\n  console.log(myuserId)\n\n  axios.get(`/api/v1/rest-auth/user/${myuserId}`, this.state)\n  .then(res => {\n      console.log('res', res.data)\n      // localStorage.setItem('my-app-user', JSON.stringify(res.data)\n\n  })\n  .catch(error => {\n      console.log(error);\n  });\n}\n  handleSubmit(e) {\n    e.preventDefault();\n    let myuserId= localStorage.getItem('user_id');\n\n    axios.patch(`/api/v1/rest-auth/user/${myuserId}`, this.state)\n    .then(res => {\n        console.log('res', res.data)\n        localStorage.setItem('my-app-user', JSON.stringify(res.data)\n      );\n        this.props.history.push('/')\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n\n  return (\n\n  <div className = \"container mt-5\" >\n    <h1>Update User</h1>\n      <div className='row'>\n        <div className='col-sm-8'>\n          <div className='card'>\n            <div className='card-body'>\n\n              <form onSubmit={this.handleSubmit}>\n                <p>\n                  <label htmlFor=\"username\">Username</label>\n                  <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"email\">Email</label>\n                  <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required=\"required\"/>\n                </p>\n                <p>\n                  <label htmlFor=\"password\">Password</label>\n                  <input id='password' type='password' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required=\"required\"/>\n                </p>\n                <button>Login</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>)\n    }\n}\n\nexport default UserUpdate;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Signup from './components/Signup';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport ProfileForm from './components/ProfileForm';\nimport SearchLesson from './components/SearchLessons';\nimport UserUpdate from './components/UserUpdate';\nimport ProfileDetail from './components/ProfileDetail';\n// import SearchBar from './components/Search';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { BrowserRouter as Router, Route, Switch , } from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter>\n      <Router>\n          <Switch>\n            // <Route path='/profiledetail/' component={ProfileDetail} />\n            <Route path='/search/' component={SearchLesson} />\n            <Route path='/profile/new/' component={ProfileForm} />\n            <Route path='/signup/' component={Signup} />\n            <Route path='/login/' component={Login} />\n            <Route path='/user/' component={UserUpdate} />\n            <Route path='/home/' render={(props) => <Home {...props} isAuthed={true} />} />\n        </Switch>\n      </Router>\n  // </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}